@model List<RutinaDTO>
@{
    ViewData["Title"] = "Mis Rutinas";
}

<h2>Mis rutinas</h2>

<div class="mb-3 d-flex justify-content-between">
    <a href="@Url.Action("CrearRutina", "Profesional")" class="btn btn-success">+ Generar nueva rutina</a>
    <a href="@Url.Action("RegistrarEjercicio", "Profesional")" class="btn btn-secondary">+ Generar nuevo ejercicio</a>
</div>


<hr />

@foreach (var rutina in Model)
{
    <div class="card mb-3 rutina-item">
        <div class="card-body">
            <strong class="nombre">@rutina.NombreRutina</strong><br />
            <span class="tipo">Tipo: @rutina.Tipo</span><br />
            <small class="text-muted">Última modificación: @rutina.UltimaModificacion.ToShortDateString()</small>
            <div class="mt-2">
                <a href="@Url.Action("GestionClientesRutina", "Profesional", new { id = rutina.Id })" class="btn btn-primary btn-sm">Gestionar clientes</a>
                <a href="@Url.Action("ModificarRutina", "Profesional", new { id = rutina.Id })" class="btn btn-secondary btn-sm">Modificar rutina</a>
            </div>
        </div>
    </div>
}


@section Scripts {
    <script>
        document.getElementById("buscador").addEventListener("input", function () {
            const valor = this.value.toLowerCase();
            const rutinas = document.querySelectorAll(".rutina-item");

            rutinas.forEach(card => {
                const nombre = card.querySelector(".nombre").textContent.toLowerCase();
                const tipo = card.querySelector(".tipo").textContent.toLowerCase();

                if (nombre.includes(valor) || tipo.includes(valor)) {
                    card.style.display = "block";
                } else {
                    card.style.display = "none";
                }
            });
        });
    </script>
}